<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd">

    <bean id="triangle" class="springlearning.Triangle">
    	<property name="PointA" ref="point1"></property>
    	<property name="PointB" ref="point2"></property>
    	<property name="PointC" ref="point3"></property>
    </bean>
    
    <bean id="circle" class="springlearning.Circle">
    	<!-- <property name="center" ref="point3"></property>-->
    </bean>
	
	<!-- By default the @Autowired annotation is going to look for a bean by type
		Here there are 3 beans of the same type , springlearning.Point
		So we get an UnsatisfiedDependencyException -->
    <bean id="point1" class="springlearning.Point">
    	<property name="x" value="0" ></property>
    	<property name="y" value="0"></property>
    </bean>
    
    <bean id="point2" class="springlearning.Point">
    	<property name="x" value="5"></property>
    	<property name="y" value="10"></property>
    </bean>
    
    <bean id="point3" class="springlearning.Point">
    	<property name="x" value="10"></property>
    	<property name="y" value="25"></property>
    </bean>
   
    <!-- this line is very important, this is the one that enables the spring frame to start looking for @Autowired annotation in the java files -->
   	<bean class="org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor"></bean>
</beans>
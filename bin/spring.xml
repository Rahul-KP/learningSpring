<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd">

    <bean id="triangle" class="springlearning.Triangle">
    	<property name="PointA" ref="point1"></property>
    	<property name="PointB" ref="point2"></property>
    	<property name="PointC" ref="point3"></property>
    </bean>
    
    <bean id="circle" class="springlearning.Circle">
    <!--  since the below bean dependency is commented out, the setter function will not be able to set any value for center variable
    		This would in-turn result in a null pointer exception where ever the circle object is used 
    		this error Null point exception will occur only at runtime
    		
    		But, as a developer , we want to catch these errors way before runtime, so we use the @Required annotation (above the setter function),
    		making this dependency mandatory to have a value assigned-->
    	<property name="center" ref="point3"></property>
    </bean>

    <bean id="point1" class="springlearning.Point">
    	<property name="x" value="0" ></property>
    	<property name="y" value="0"></property>
    </bean>
    
    <bean id="point2" class="springlearning.Point">
    	<property name="x" value="5"></property>
    	<property name="y" value="10"></property>
    </bean>
    
    <bean id="point3" class="springlearning.Point">
    	<property name="x" value="10"></property>
    	<property name="y" value="25"></property>
    </bean>
   
</beans>